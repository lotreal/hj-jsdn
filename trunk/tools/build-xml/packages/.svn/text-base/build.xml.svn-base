<?xml version="1.0"?>
<!--
    构建 core kissy kissy-aio
-->
<project name="packages.build" default="build" basedir=".">
    <description>Component Build File</description>

    <!--
    only copyright min file
    pkg file has been copyright individually
    -->
    <property name="copyright.files" value="*-min.css, *-min.js"/>
    <property name="component.name" value="packages"/>
    <property name="component.files" value="*.css, *.js"/>
    <dirname property="src.dir" file="${ant.file.packages.build}"/>
    <property name="bom" value="&#xFEFF;"/>

    <import file="../../common.xml"/>

    <property name="nodejs.patch.file"
              location="${kissy.dir}/tools/nodejs-patch/patch.js"/>

    <target name="build-seed">
        <!--
        build seed first，刷新 seed 前的时间戳到最新
        seed 的时间戳也代表 kissy 以及 kissy-aio 的时间戳
        -->
        <delete>
            <!--每次都要重新 build seed-->
            <fileset dir="../" includes="seed*.js"/>
        </delete>
        <ant dir="${kissy.src.dir}/seed/" inheritall="false"/>
    </target>

    <target name="concat" depends="build-seed">

        <!--
            不使用 java -jar fork 的话，新开 jvm 和后面的 concat 不串行了
        -->
        <java classname="com.taobao.f2e.Main">
            <arg value="-requires"/>
            <arg value="core"/>
            <arg value="-baseUrls"/>
            <arg value="${kissy.src.dir}"/>
            <arg value="-encodings"/>
            <arg value="utf-8"/>
            <arg value="-outputEncoding"/>
            <arg value="utf-8"/>
            <arg value="-output"/>
            <arg value="${src.dir}/core-pkg.js"/>
            <classpath>
                <pathelement location="${kissy-tools.dir}/module-compiler/module-compiler.jar"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </java>

        <!--
            use core 直接放入 core.js 中 ??
            有的应用会先载入 seed.js，再载入 core.js ，希望能立刻用到 core 的东西
        -->
        <concat destfile="${src.dir}/core.tmp.js"
                encoding="${charset}" outputencoding="${charset}">
            <header filtering="no" trimleading="yes">${bom}</header>
            <path path="${src.dir}/core-pkg.js"/>
            <footer filtering="no" trimleading="yes">
                KISSY.use('core');
            </footer>
            <filterchain>
                <deletecharacters chars="${bom}"/>
            </filterchain>
        </concat>

        <move tofile="${src.dir}/core-pkg.js"
              file="${src.dir}/core.tmp.js"/>

        <!-- kissy: seed + core, 独立单文件 -->
        <concat destfile="${src.dir}/kissy-pkg.js"
                encoding="${charset}" outputencoding="${charset}">
            <header filtering="no" trimleading="yes">${bom}</header>
            <path path="${kissy.build.dir}/seed.js"/>
            <path path="${src.dir}/core-pkg.js"/>
            <filterchain>
                <deletecharacters chars="${bom}"/>
            </filterchain>
        </concat>

        <!-- kissy-aio: 所有文件 -->
        <concat destfile="${src.dir}/kissy-aio-pkg.js"
                encoding="${charset}"
                outputencoding="${charset}">
            <header filtering="no" trimleading="yes">${bom}</header>
            <path path="${src.dir}/kissy-pkg.js"/>
            <path path="${kissy.build.dir}/sizzle.js"/>
            <path path="${kissy.build.dir}/datalazyload.js"/>
            <path path="${kissy.build.dir}/template.js"/>
            <path path="${kissy.build.dir}/flash.js"/>
            <path path="${kissy.build.dir}/dd.js"/>
            <path path="${kissy.build.dir}/resizable.js"/>
            <path path="${kissy.build.dir}/uibase.js"/>
            <path path="${kissy.build.dir}/component.js"/>
            <path path="${kissy.build.dir}/switchable.js"/>
            <path path="${kissy.build.dir}/overlay.js"/>
            <path path="${kissy.build.dir}/suggest.js"/>
            <path path="${kissy.build.dir}/imagezoom.js"/>
            <path path="${kissy.build.dir}/calendar.js"/>
            <path path="${kissy.build.dir}/menu.js"/>
            <path path="${kissy.build.dir}/button.js"/>
            <path path="${kissy.build.dir}/menubutton.js"/>
            <path path="${kissy.build.dir}/validation.js"/>
            <filterchain>
                <deletecharacters chars="${bom}"/>
            </filterchain>
        </concat>
    </target>

    <!--
    apply nodejs patch to kissy.js
    -->
    <target name="nodejs-patch">
        <concat destfile="${src.dir}/kissy-nodejs-pkg.js"
                encoding="${charset}"
                outputencoding="${charset}">
            <header filtering="no" trimleading="yes">${bom}</header>
            <path location="${nodejs.patch.file}"/>
            <path location="${src.dir}/kissy-pkg.js"/>
            <filterchain>
                <deletecharacters chars="${bom}"/>
            </filterchain>
        </concat>
    </target>

    <target name="clean">
        <delete dir="${src.dir}" includes="${component.files}"/>
    </target>

    <target name="build" depends="concat,nodejs-patch,common.build,clean">
    </target>
</project>
